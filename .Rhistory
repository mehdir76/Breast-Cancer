mean(modelrf$test$predicted==testingrf$Type)
modelrf$test$predicted
modelrf$test
modelrf$predicted==testingrf$low
mean(modelrf$predicted==testingrf$low)
table(modelrf$predicted, testingrf$low)
mean(pred == testingrf$low)
library(randomForest)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Hdma.csv")
dim(boston_house)
head(boston_house, 5)
library(randomForest)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,5)
dim(boston_house)
set.seed(1234)
smpl <- sample(1:nrow(boston_house),
0.7 * nrow(boston_house))
trainingrf <- boston_house[smpl, ]
testingrf <- boston_house[-smpl, ]
library(MASS)
library(rpart)
databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\birthwt.csv")
databwrf<- databwrf[-1]
head(databwrf)
catgrf <- c("low", "race", "smoke", "ht", "ui")
databwrf[catgrf] <- lapply(databwrf[catgrf], as.factor)
set.seed(1234)
smpl <- sample(1:nrow(databwrf),
0.7 * nrow(databwrf))
trainingrf <- databwrf[smpl, ]
testingrf <- databwrf[-smpl, ]
library(randomForest)
modelrf <- randomForest(low ~ . -bwt, data = databwrf,
subset = trainingrf, importance = TRUE, ntree =1000)
modelrf <- randomForest(low ~ . -bwt, data = databwrf,
subset = trainingrf, importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt, data = databwrf,
subset = trainingrf, importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt,
subset = trainingrf, importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt, data = databwrf,
subset = trainingrf, importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt, data = databwrf,
importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt, data = databwrf, subset = smpl
importance = TRUE, ntree =1000)
modelrf = randomForest(low ~ . -bwt, data = databwrf, subset = databwrf[smpl, ]
importance = TRUE, ntree =1000)
modelrf <- randomForest(low ~ . -bwt, data = databwrf, subset = databwrf[smpl, ]
importance = TRUE, ntree =1000)
modelrf <- randomForest(low ~ . -bwt, data = databwrf, xtest = trainingrf
importance = TRUE, ntree =1000)
modelrf <- randomForest(low ~ . -bwt, data = databwrf,
importance = TRUE, ntree =1000)
modelrf
modelrf <- randomForest(low ~ . -bwt, trainingrf
importance = TRUE, ntree =1000)
modelrf <- randomForest(low ~ . -bwt, trainingrf,
importance = TRUE, ntree =1000)
modelrf
pred <- predict(modelrf, newdata = testingrf)
pred
table (pred, testingrf$low)
35/57
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainingrf)
library(randomForest)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,5)
dim(boston_house)
set.seed(1234)
smpl <- sample(1:nrow(boston_house),
0.7 * nrow(boston_house))
trainingrf <- boston_house[smpl, ]
testingrf <- boston_house[-smpl, ]
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainingrf)
library(MASS)
library(randomForest)
library(MASS)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,5)
dim(boston_house)
set.seed(1234)
smpl <- sample(1:nrow(boston_house),
0.7 * nrow(boston_house))
trainbos <- boston_house[smpl, ]
testbos <- boston_house[-smpl, ]
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
train = sample(1:nrow(Boston), 300)
bostonrf <- randomForest(medv ~., data = boston_house, subset = train)
train
train = sample(1:nrow(Boston), 320)
bostonrf <- randomForest(medv ~., data = boston_house, subset = train)
bostonrf
?Boston
View(boston_house)
summary(Boston$medv)
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
set.seed(1234)
smpl <- sample(1:nrow(boston_house),
354)
trainbos <- boston_house[smpl, ]
testbos <- boston_house[-smpl, ]
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
library(randomForest)
library(MASS)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,3)
bostonrf <- randomForest(medv ~., data = boston_house, subset = smpl)
library(randomForest)
library(MASS)
summary(Boston$medv)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
boston_house <- boston_house[-1]
set.seed(1234)
smpl <- sample(1:nrow(boston_house),
354)
bostonrf <- randomForest(medv ~., data = boston_house, subset = smpl)
bostonrf
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
set.seed(1234)
trainbos <- sample(1:nrow(boston_house),
354)
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
bostonrf
double(13)
plot(bostonrf)
varImpPlot(bostonrf,
sort = T,
main="Variable Importance",
n.var=5)
varImpPlot(bostonrf,
sort = T,
main="Variable Importance",
n.var=13)
oob.err = double(13)
test.err = double(13)
for (mtry in 1:13) {
fit = randomForest(medv ~ ., data = boston_house, subset = trainbos, mtry = mtry,
ntree = 400)
oob.err[mtry] = fit$mse[400]
pred = predict(fit, boston_house[-train, ])
test.err[mtry] = with(boston_house[-train, ], mean((medv - pred)^2))
cat(mtry, " ")
}
oob.err = double(13)
test.err = double(13)
for (mtry in 1:13) {
fit = randomForest(medv ~ ., data = boston_house, subset = trainbos, mtry = mtry,
ntree = 400)
oob.err[mtry] = fit$mse[400]
pred = predict(fit, boston_house[-trainbos, ])
test.err[mtry] = with(boston_house[-trainbos, ], mean((medv - pred)^2))
cat(mtry, " ")
}
matplot(1:mtry, cbind(test.err, oob.err), pch = 20, col = c("green", "grey"),
type = "b", ylab = "Mean Squared Error")
legend("topright", legend = c("OOB", "Test"), pch = 20, col = c("green", "grey"))
setwd("C://Users//Dell/Desktop/DAT640/Project/")
wisconsin_bcd <- read.csv("breast_cancer_wisconsin.csv", stringsAsFactors = FALSE)
str(wisconsin_bcd)
##Print Session info()
sessionInfo()
setwd("C://Users//Dell/Desktop/DAT640/Project/")
wisconsin_bcd <- read.csv("breast_cancer_wisconsin.csv", stringsAsFactors = FALSE)
sessionInfo()
sessionInfo()
sessionInfo()
head(wisconsin_bcd)
str(wisconsin_bcd)
sessionInfo()
setwd("C://Users//Dell/Desktop/DAT640/Project/")
wisconsin_bcd <- read.csv("breast_cancer_wisconsin.csv", stringsAsFactors = FALSE)
str(wisconsin_bcd)
head(wisconsin_bcd)
kable(head(wisconsin_bcd), 6)
kable(head(wisconsin_bcd), format = "markdown", padding = 2)
library(knitr)
kable(head(wisconsin_bcd), format = "markdown", padding = 2)
kable(head(wisconsin_bcd), format = "markdown", padding = 0)
kable(head(wisconsin_bcd), format = "markdown")
head(wisconsin_bcd)
head((wisconsin_bcd),6)
View(wisconsin_bcd)
library(MASS)
library(MASS)
library(rpart)
library(rattle)
databw <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\birthwt.csv")
databw
head(databw)
str(databw)
databw <- databw[-1]
head(databw)
hist(databw$bwt, main = "Infant birth weight distribution")
table(databw$low)
catg <- c('low', 'race', 'smoke', 'ht', 'ui')
databw[catg] <- lapply(databw[catg], as.factor)
str(databw)
set.seed(1234)
smplt <- sample(1:nrow(databw),
0.7 * nrow(databw))
training <- databw[smplt, ]
testing <- databw[-smplt, ]
bwtree <- rpart(low ~ . -bwt,
data = training,
method = 'class')
print(bwtree)
summary(bwtree)
table(bwtree$variable.importance)
plot(bwtree)
text(bwtree)
library(rpart.plot)
fancyRpartPlot(bwtree)
rpart.plot(bwtree, extra=104, box.palette="GnBu",
branch.lty=3, shadow.col="gray", nn=TRUE, digits = 2)
prp(bwtree, digits = 4, faclen = 0, cex = 0.8, extra = 1)
predbw <- predict(bwtree, testing, type = 'class')
table(predbw, testing$low)
(32)/(57)
printcp(bwtree)
pruned_cp <- which.min(bwtree$cptable[,"xerror"])
cp_value <- bwtree$cptable[pruned_cp, "CP"]
cp_value
library(rpart)
library(rattle)
library(MASS)
summary(Boston$medv)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,3)
dim(boston_house)
set.seed(1234)
trainbos <- sample(1:nrow(boston_house),
354)
trainbos <- boston_house[smpl, ]
bostonDT <- rpart(medv ~., data = trainbos)
bostonDT <- rpart(medv ~., data = boston_house, subset = trainbos)
bostonDT
fancyRpartPlot(bostonDT)
predbos <- predict(bostonDT, boston_house[-trainbos,])
table(predbos, boston_house[-trainbos,]$medv)
library(tree)
library(rattle)
boston_house <-read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,3)
dim(boston_house)
str(boston_house)
set.seed(1234)
trainbos <- sample(1:nrow(boston_house),
354)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
library(tree)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
plot(bostonDT)
text(bostonDT, pretty = 0)
fancyRpartPlot(bostonDT)
library(rattle)
fancyRpartPlot(bostonDT)
?Boston
library(MASS)
?Boston
View(databwrf)
predbos <- predict(bostonDT, newdata = boston_house[-trainbos,])
testbos <- boston_house[-trainbos, "medv"]
plot(predbos, testbos)
abline(0, 1)
mean((predbos - testbos)^2)
bostree.cv <- cv.tree(bostonDT)
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
plot(cv.tree((bostonDT)))
opt.tree <- which(bostree.cv$dev == min(bostree.cv$dev))
best.leaves <- min(bostree.cv$size[opt.tree])
bostree.pruned <- prune.tree(bostonDT, best = best.leaves)
plot(bostree.pruned)
text(bostree.pruned, pretty = 0)
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
library(tree)
library(rattle)
library(MASS)
summary(Boston$medv)
boston_house <-read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
head(boston_house,3)
dim(boston_house)
str(boston_house)
set.seed(1234)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
bostonDT
plot(bostonDT)
text(bostonDT, pretty = 0)
predbos <- predict(bostonDT, newdata = boston_house[-trainbos,])
testbos <- boston_house[-trainbos, "medv"]
plot(predbos, testbos)
abline(0, 1)
mean((predbos - testbos)^2)
bostree.cv <- cv.tree(bostonDT)
plot(cv.tree((bostonDT)))
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
opt.tree <- which(bostree.cv$dev == min(bostree.cv$dev))
best.leaves <- min(bostree.cv$size[opt.tree])
bostree.pruned <- prune.tree(bostonDT, best = best.leaves)
plot(bostree.pruned)
text(bostree.pruned, pretty = 0)
table(predbos, boston_house[-trainbos,]$medv)
library(tree)
library(rattle)
library(MASS)
boston_house <-read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
boston_house <- boston_house[-1]
str(boston_house)
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
set.seed(1234)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
plot(bostonDT)
text(bostonDT, pretty = 0)
predbos <- predict(bostonDT, newdata = boston_house[-trainbos,])
testbos <- boston_house[-trainbos, "medv"]
plot(predbos, testbos)
abline(0, 1)
mean((predbos - testbos)^2)
mean((predbos - testbos)^2)
bostree.cv
bostree.cv <- cv.tree(bostonDT)
bostree.cv
bostree.cv <- cv.tree(bostonDT)
bostree.cv
plot(cv.tree((bostonDT)))
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
opt.tree <- which(bostree.cv$dev == min(bostree.cv$dev))
best.leaves <- min(bostree.cv$size[opt.tree])
bostree.pruned <- prune.tree(bostonDT, best = best.leaves)
plot(bostree.pruned)
text(bostree.pruned, pretty = 0)
library(tree)
library(rattle)
library(MASS)
boston_house <-read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
head(boston_house, 5)
boston_house <- boston_house[-1]
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
plot(bostonDT)
text(bostonDT, pretty = 0)
fancyRpartPlot(bostonDT)
bostree.cv <- cv.tree(bostonDT)
bostree.cv
plot(cv.tree((bostonDT)))
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
plot(cv.tree((bostonDT)))
plot(bostree.cv$size, bostree.cv$dev, type = "b" )
plot(cv.tree((bostonDT)))
prune.tree(bostonDT)
plot(prune.boston)
prune.boston <- prune.tree(bostonDT)
plot(prune.boston)
text(prune.boston)
library(tree)
library(rattle)
library(MASS)
boston_house <-read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
boston_house <- boston_house[-1]
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonDT <- tree(medv ~., data = boston_house, subset = trainbos)
summary(bostonDT)
bostonDT
prune.boston <- prune.tree(bostonDT)
plot(prune.boston)
text(prune.boston)
prune.boston <- prune.tree(bostonDT, best = 5)
plot(prune.boston)
text(prune.boston)
library(randomForest)
library(MASS)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
boston_house <- boston_house[-1]
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonrf <- randomForest(medv ~., data = boston_house, subset = trainbos)
bostonrf
bostonrf <- randomForest(medv ~., data = boston_house,
mtry = 13, importance = TRUE, subset = trainbos)
bostonrf
library(randomForest)
library(MASS)
boston_house <- databwrf <- read.csv(file = "C:\\Users\\Dell\\Desktop\\DAT640\\Module 7\\Boston.csv")
dim(boston_house)
boston_house <- boston_house[-1]
head(boston_house,3)
set.seed(1)
trainbos <- sample(1:nrow(boston_house),
nrow(boston_house)/2)
bostonrf <- randomForest(medv ~., data = boston_house,
mtry = 13, importance = TRUE, subset = trainbos)
bostonrf
set.seed(1)
boston.bagg <- randomForest(medv ~., data = boston_house,
mtry = 13, importance = TRUE, subset = trainbos)
boston.bagg
bostest.bagg <- predict(bostest.bagg, newdata = boston_house[-trainbos,])
set.seed(1)
boston.bagg <- randomForest(medv ~., data = boston_house,
mtry = 13, importance = TRUE, subset = trainbos)
boston.bagg
plot(boston.bagg)
bostest.bagg <- predict(bostest.bagg, newdata = boston_house[-trainbos,])
bostest.bagg <- predict(boston.bagg, newdata = boston_house[-trainbos,])
plot(bostest.bagg, testbos)
boston.test <- boston_house[-trainbos, "medv"]
bostest.bagg <- predict(boston.bagg, newdata = boston_house[-trainbos,])
plot(bostest.bagg, boston.test)
abline(0,1)
mean((bostest.bagg - boston.test)^2)
boston.forest <- randomForest(medv ~., data = boston_house,
mtry = 6, importance = TRUE, subset = trainbos)
boston.forest
plot(boston.forest)
bostest.forest <- predict(boston.forest, newdata = boston_house[-trainbos,])
plot(bostest.forest, boston.test)
abline(0,1)
mean((bostest.forest - boston.test)^2)
set.seed(1)
boston.forest <- randomForest(medv ~., data = boston_house,
mtry = 6, importance = TRUE, subset = trainbos)
boston.forest
plot(boston.forest)
bostest.forest <- predict(boston.forest, newdata = boston_house[-trainbos,])
plot(bostest.forest, boston.test)
abline(0,1)
mean((bostest.forest - boston.test)^2)
varImpPlot(bostest.forest,
sort = T,
main="Variable Importance",
n.var=13)
varImpPlot(boston.forest,
sort = T,
main="Variable Importance",
n.var=13)
library(ProjectTemplate)
create.project('cancer')
load.project()
ProjectTemplate::migrate.project()
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
load.project()
get.project()
migrate.project()
library(ProjectTemplate)
load.project()
get.project()
migrate.project()
create.project("alpha")
load.project()
setwd("C:\Users\Dell\Desktop\DAT640\Project")
setwd("C://Users/Dell/Desktop/DAT640/Project")
library(ProjectTemplate)
load.project()
setwd("C://Users/Dell/Desktop/DAT640/Project/cancer")
library(ProjectTemplate)
load.project()
migrate.project()
library(ProjectTemplate)
load.project()
